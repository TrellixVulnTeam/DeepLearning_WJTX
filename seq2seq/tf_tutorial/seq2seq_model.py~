import random
import numpy as np
from six.moves import xrange
import tensorflow as tf
import utils

class Seq2SeqModel(object):
    def __init__(self,
                 src_vocab_size,
                 target_vocab_size,
                 buckets,
                 size,
                 num_layers,
                 max_gradient_norm,
                 batch_size,
                 learning_rate,
                 learning_rate_decay_factor,
                 use_lstm=False,
                 num_samples=512,
                 forward_only=False,
                 dtype=tf.float32):
        self.src_vocab_size         = src_vocab_size
        self.target_vocab_size      = target_vocab_size
        self.buckets                = buckets
        self.batch_size             = batch_size
        self.learning_rate          = tf.Variable(
             float(learning_rate), trainable=False, dtype=dtype)
        self.learning_rate_decay_op = self.learning_rate.assign(
             self.learning_rate * learning_rate_decay_factor)
        self.global_step            = tf.Variable(0, trainable=False)

        output_projection     = None
        softmax_loss_function = None

        if num_samples > 0 and num_samples < self.target_vocab_size:
            w_t = tf.get_variable("proj_w", [self.target_vocab_size, size], dtype=dtype)
            w   = tf.transpose(w_t)
            b   = tf.get_variable("proj_b", [self.target_vocab_size], dtype=dtype)
            output_projection = (w, b)
            
